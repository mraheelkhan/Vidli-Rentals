
@{
    ViewBag.Title = "New Rental Form";
    
}

<h2>New Rental Form</h2>


<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customers" name="customers" data-rule-validCustomer="true" required type="text" class="form-control typeahead" />
        </div>
        
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movies" name="movies" data-rule-validMovie="true" type="text" class="form-control" />
        </div>
        
        <div class="form-group">
            <div class="col-md-4 col-sm-4">
                <ul id="movieslist" class="list-group"></ul>
            </div>
        </div>
    </div>
        <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            var vm = {
                movieIds: []
            }
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('customerName'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
//                prefetch: 'api/customers',
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });


            $('#customers').typeahead({
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customer',
                    display: 'customerName',
                    source: customers
                }).on("typeahead:select",
                function(e, customer) {
                    vm.customerId = customer.id;
                });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
//                prefetch: 'api/customers',
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            $('#movies').typeahead({
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'movie',
                    display: 'name',
                    source: movies
                }).on("typeahead:select",
                function(e, movie) {

                    $("#movieslist").append("<li class='list-group-item'>" + movie.name + "</li>");
                    $("#movies").typeahead("val", "");
                    vm.movieIds.push(movie.id);
                });

            $.validator.addMethod("validCustomer",
                function() {
                    return vm.customerId && vm.customerId !== 0;
                },
                "Please Select a valid Customer");

            $.validator.addMethod("validMovie",
                function() {
                    return vm.movieIds && vm.movieIds.length > 0;
                },
                "Please Select a valid Movie");
            var validator =  $("#newRental").validate({
                submitHandler: function() {

                    $.ajax({
                            url: "/api/rentals",
                            method: "post",
                            data: vm
                        })
                        .done(function() {
                            $('#newRental').trigger("reset");
                            $('#movieslist').empty();
                            $("#movies").typeahead("val", "");
                            $("#customers").typeahead("val", "");

                            vm = {
                                moviesIds : []
                            }
                            toastr.success("Rentals successfully recorded in the system.");

                            validator.resetForm();
                        })
                        .fail(function() {
                            toastr.error("Rentals does not recorded in the system.");
                        });
                    return false;
                }
            });
        });
    </script>
}